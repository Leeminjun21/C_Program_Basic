////////////////// 소스코드 //////////////////////
#define _CRT_SECURE_NO_WARNINGS  // 파일 입출력 경고 무시
#include <stdio.h>               // 입력과 출력을 위한 라이브러리
#include <math.h>                // 수학 계산을 위한 라이브러리 (atan2 사용)

#define MAX_POINTS 100  // 최대 100개의 점을 저장할 수 있도록 설정

// 파일에서 데이터를 읽어오는 함수
// 'filename'에서 X, Y 좌표와 각도를 읽어옴
int read_file(const char* filename, double X[], double Y[], double Angle[])
{
    FILE* file = fopen(filename, "r");  // 파일을 읽기 모드로 엶
    int count = 0;  // 몇 개의 점을 읽었는지 저장하는 변수

    if (!file)  // 파일이 열리지 않으면 에러 메시지 출력
    {
        printf("파일을 열 수 없습니다.\n");
        return 0;  // 0을 반환하여 실패했음을 알림
    }

    // 파일에서 데이터를 하나씩 읽어옴
    // %lf는 실수(double) 값을 읽을 때 사용
    while (fscanf(file, "%lf %lf %lf", &X[count], &Y[count], &Angle[count]) == 3 && count < MAX_POINTS)
    {
        count++;  // 한 줄을 읽을 때마다 count 증가
    }

    fclose(file);  // 파일을 닫음
    return count;  // 읽은 점의 개수를 반환
}

// 두 점 사이의 각도를 계산하는 함수
void calculate_angles(int num_points, double x[], double y[], double yaw_angle[])
{
    for (int i = 0; i < num_points - 1; i++)
    {
        double dx = x[i + 1] - x[i];  // X좌표 차이
        double dy = y[i + 1] - y[i];  // Y좌표 차이

        // atan2 함수로 두 점 사이의 각도를 계산 (라디안 -> 도 단위로 변환)
        double angle = atan2(dy, dx) * 180.0 / 3.141592;

        if (angle < 0) angle += 360.0;  // 각도가 음수일 때 360도를 더해 양수로 변환

        yaw_angle[i] = angle;  // 계산된 각도를 배열에 저장
    }
}

// 웨이포인트 데이터를 출력하는 함수
void print_points(int num_points, double X[], double Y[], double Angle[])
{
    for (int i = 0; i < num_points; i++)
    {
        printf("X[%d] = %.2f, Y[%d] = %.2f, Angle[%d] = %.2f\n", i, X[i], i, Y[i], i, Angle[i]);
    }
}

// 계산된 각도를 출력하는 함수
void print_yaw_angles(int num_points, double yaw_angle[])
{
    for (int i = 0; i < num_points - 1; i++)
    {
        printf("두 점 사이의 각도 %d -> %d: %.2f 도\n", i, i + 1, yaw_angle[i]);
    }
}

int main(void)
{
    double X[MAX_POINTS] = { 0.0 };  // X 좌표를 저장할 배열
    double Y[MAX_POINTS] = { 0.0 };  // Y 좌표를 저장할 배열
    double Angle[MAX_POINTS] = { 0.0 };  // 각도를 저장할 배열
    double yaw_angle[MAX_POINTS] = { 0.0 };  // 계산된 두 점 사이의 각도를 저장할 배열

    // 파일에서 웨이포인트 데이터 읽기
    int num_points = read_file("waypoint.txt", X, Y, Angle);

    // 파일에서 데이터를 제대로 읽지 못했다면 종료
    if (num_points == 0)
    {
        printf("유효한 데이터를 읽지 못했습니다.\n");
        return 1;
    }

    // 웨이포인트 데이터 출력
    printf("웨이포인트 데이터:\n");
    print_points(num_points, X, Y, Angle);

    // 두 점 사이의 각도 계산
    printf("\n웨이포인트 간의 각도 계산:\n");
    calculate_angles(num_points, X, Y, yaw_angle);

    // 계산된 각도 출력
    print_yaw_angles(num_points, yaw_angle);

    return 0;  // 프로그램 성공적으로 종료
}
